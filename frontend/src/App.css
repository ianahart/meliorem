* {
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  display: flex;
  flex-direction: column;
  background: blue;
  background: radial-gradient(125% 125% at 40% 10%, #000 40%, #63e 100%) !important;
}

.content {
  flex: 1 0 auto;
  background: radial-gradient(125% 125% at 50% 10%, #000 40%, #63e 100%);
  min-height: 100vh;
}
.footer {
  padding: 1rem;
  flex-shrink: 0;
}

.overflow-scroll::-webkit-scrollbar {
  width: 12px;
}

.overflow-scroll::-webkit-scrollbar-track {
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  background: rgba(181, 181, 181, 0.6);
}

.overflow-scroll::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: rgba(181, 181, 181, 0.6);

  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
}

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flip-card {
  background-color: transparent;
  width: 300px;
  height: 200px;
  border-radius: 8px;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

/* Do an horizontal flip when you move the mouse over the flip box container */
/*.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}*/

/* Position the front and back side */
.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
}

/* Style the back side */
.flip-card-back {
  transform: rotateY(180deg);
}

.slide-in {
  animation: slide-in-element 0.35s ease-in-out;
}

.slide-down {
  animation: slide-down 0.35s ease-in-out;
}

@keyframes slide-in-element {
  from {
    transform: translateX(-100px);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slide-down {
  from {
    opacity: 0;
    transform: translateY(-50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/*REACT CALENDAR*/
.container {
  width: 20rem;
}

.calendar {
  border-radius: 8px;
  background-color: #14144d;
}

.calendar .react-calendar__navigation {
  width: 100%;
  background: transparent;
  display: flex;
  justify-content: space-around;
}

.react-calendar__navigation > * {
  color: #fff;
}

.calendar abbr {
  color: #fff;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 10px;
  text-decoration: none;
}

.calendar .react-calendar__month-view__days__day--neighboringMonth abbr {
  color: #a0aec0;
}

.calendar .react-calendar__month-view__weekdays__weekday {
  text-align: center;
}

.calendar .streak {
  background-color: rgba(0, 0, 0, 0.45);
}

.calendar button {
  background-color: transparent;
  border: none;
  padding: 0.75rem;
  font-size: 10px;
  margin: 0.1rem 0;
}

.react-calendar__tile {
  position: relative;
}

.tile-content p {
  position: absolute;
  z-index: 2;
  color: #000;
  top: 10px;
  left: 10px;
  font-weight: bold;
}

.tile-content img {
  width: 28px;
  height: 28px;
  position: absolute;
  z-index: 1;
  top: 3px;
  left: 0px;
}
/*REACT CALENDAR*/

/*REACT TIME PICKER*/
.react-time-picker__wrapper {
  border: none;
}

.time-picker {
  background-color: #14144d;
  color: #fff;
}

.time-picker button svg {
  fill: white;
  stroke: white;
}
/*REACT TIME PICKER*/

/*REACT BIG CALENDAR*/
.rbc-toolbar button {
  color: white !important;
}
